fact PT0.910086461S
fib PT0.679725578S

* convert all pcs to labels
** store labels in vm

* fix vm.defragOps()
** relocate all labels for each nop

* add double copy compiler

* try matching data directly in eval loop
** benchmark
** simplify op?

* skip binding nil method args

* add return macro
** emit nop and log pc in list
** go through all & assign same goto when endpc is knowm

* add gui tabs
** add top panel
** Data / Chart

* add gui/chart module
** https://www.jfree.org/jfreechart/

jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

* add db module
** jdbc / h2

* lambda?

* read examples/stoj.csv
https://opencsv.sourceforge.net/
https://www.investing.com/crypto/bitcoin/historical-data
** calculate open/high/low as percentage of price
** log seq, series name, delta time, percentages & change

* add stoj gui
** top panel for selection
*** id, start/end date and knobs for percentages/change
*** find first log for id > start
*** find all other logs matching knobs != id
*** match back in time if as far as possible
*** draw a projection for each found id & one for actual data if any
** table with records/chart

* add load macro
* add swap op

* add range method
** add RangeTrait
** create range
** optional max

* add optional arg types
** look for startsWith @
** apply to all preceding args
** allow @? for missing

n a b @Int
